// Code generated by protoc-gen-go.
// source: serverrpc.proto
// DO NOT EDIT!

/*
Package serversvc is a generated protocol buffer package.

It is generated from these files:
	serverrpc.proto

It has these top-level messages:
	ErrorData
	ServerSvcStatusRequest
	ServerSvcStatusResponse
	Session
	Person
	Instructor
	User
	GetSessionsRequest
	GetSessionsReply
	PostSessionRequest
	PostSessionReply
	EnrollInstructorRequest
	EnrollInstructorResponse
	EnrollUserRequest
	EnrollUserResponse
*/
package serversvc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorData struct {
	ErrorCode string `protobuf:"bytes,1,opt,name=errorCode" json:"errorCode,omitempty"`
	ErrorStr  string `protobuf:"bytes,2,opt,name=errorStr" json:"errorStr,omitempty"`
}

func (m *ErrorData) Reset()                    { *m = ErrorData{} }
func (m *ErrorData) String() string            { return proto.CompactTextString(m) }
func (*ErrorData) ProtoMessage()               {}
func (*ErrorData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ErrorData) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *ErrorData) GetErrorStr() string {
	if m != nil {
		return m.ErrorStr
	}
	return ""
}

type ServerSvcStatusRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ServerSvcStatusRequest) Reset()                    { *m = ServerSvcStatusRequest{} }
func (m *ServerSvcStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*ServerSvcStatusRequest) ProtoMessage()               {}
func (*ServerSvcStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ServerSvcStatusRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ServerSvcStatusResponse struct {
	ErrData *ErrorData `protobuf:"bytes,1,opt,name=errData" json:"errData,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ServerSvcStatusResponse) Reset()                    { *m = ServerSvcStatusResponse{} }
func (m *ServerSvcStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*ServerSvcStatusResponse) ProtoMessage()               {}
func (*ServerSvcStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ServerSvcStatusResponse) GetErrData() *ErrorData {
	if m != nil {
		return m.ErrData
	}
	return nil
}

func (m *ServerSvcStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Session struct {
	SessionID            string `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	SessionTime          string `protobuf:"bytes,2,opt,name=sessionTime" json:"sessionTime,omitempty"`
	SessionDesc          string `protobuf:"bytes,3,opt,name=sessionDesc" json:"sessionDesc,omitempty"`
	InstructorID         string `protobuf:"bytes,4,opt,name=instructorID" json:"instructorID,omitempty"`
	SessionType          string `protobuf:"bytes,5,opt,name=sessionType" json:"sessionType,omitempty"`
	SessionUsersEnrolled uint64 `protobuf:"varint,6,opt,name=sessionUsersEnrolled" json:"sessionUsersEnrolled,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Session) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *Session) GetSessionTime() string {
	if m != nil {
		return m.SessionTime
	}
	return ""
}

func (m *Session) GetSessionDesc() string {
	if m != nil {
		return m.SessionDesc
	}
	return ""
}

func (m *Session) GetInstructorID() string {
	if m != nil {
		return m.InstructorID
	}
	return ""
}

func (m *Session) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *Session) GetSessionUsersEnrolled() uint64 {
	if m != nil {
		return m.SessionUsersEnrolled
	}
	return 0
}

type Person struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age      string `protobuf:"bytes,2,opt,name=age" json:"age,omitempty"`
	Sex      string `protobuf:"bytes,3,opt,name=sex" json:"sex,omitempty"`
	Location string `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

func (m *Person) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *Person) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type Instructor struct {
	Person       *Person `protobuf:"bytes,1,opt,name=person" json:"person,omitempty"`
	InstructorID string  `protobuf:"bytes,2,opt,name=instructorID" json:"instructorID,omitempty"`
	Rating       float32 `protobuf:"fixed32,3,opt,name=rating" json:"rating,omitempty"`
}

func (m *Instructor) Reset()                    { *m = Instructor{} }
func (m *Instructor) String() string            { return proto.CompactTextString(m) }
func (*Instructor) ProtoMessage()               {}
func (*Instructor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Instructor) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

func (m *Instructor) GetInstructorID() string {
	if m != nil {
		return m.InstructorID
	}
	return ""
}

func (m *Instructor) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type User struct {
	Person     *Person  `protobuf:"bytes,1,opt,name=person" json:"person,omitempty"`
	UserID     string   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	FriendsIDs []string `protobuf:"bytes,3,rep,name=friendsIDs" json:"friendsIDs,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *User) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

func (m *User) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *User) GetFriendsIDs() []string {
	if m != nil {
		return m.FriendsIDs
	}
	return nil
}

type GetSessionsRequest struct {
	// If specified, only show sessions of this type.
	SessionType string `protobuf:"bytes,1,opt,name=sessionType" json:"sessionType,omitempty"`
}

func (m *GetSessionsRequest) Reset()                    { *m = GetSessionsRequest{} }
func (m *GetSessionsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSessionsRequest) ProtoMessage()               {}
func (*GetSessionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetSessionsRequest) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

type GetSessionsReply struct {
	ErrData *ErrorData `protobuf:"bytes,1,opt,name=errData" json:"errData,omitempty"`
	Session []*Session `protobuf:"bytes,2,rep,name=session" json:"session,omitempty"`
}

func (m *GetSessionsReply) Reset()                    { *m = GetSessionsReply{} }
func (m *GetSessionsReply) String() string            { return proto.CompactTextString(m) }
func (*GetSessionsReply) ProtoMessage()               {}
func (*GetSessionsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetSessionsReply) GetErrData() *ErrorData {
	if m != nil {
		return m.ErrData
	}
	return nil
}

func (m *GetSessionsReply) GetSession() []*Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type PostSessionRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *PostSessionRequest) Reset()                    { *m = PostSessionRequest{} }
func (m *PostSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*PostSessionRequest) ProtoMessage()               {}
func (*PostSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PostSessionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PostSessionReply struct {
	ErrData *ErrorData `protobuf:"bytes,1,opt,name=errData" json:"errData,omitempty"`
}

func (m *PostSessionReply) Reset()                    { *m = PostSessionReply{} }
func (m *PostSessionReply) String() string            { return proto.CompactTextString(m) }
func (*PostSessionReply) ProtoMessage()               {}
func (*PostSessionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PostSessionReply) GetErrData() *ErrorData {
	if m != nil {
		return m.ErrData
	}
	return nil
}

type EnrollInstructorRequest struct {
	Instructor *Person `protobuf:"bytes,1,opt,name=instructor" json:"instructor,omitempty"`
}

func (m *EnrollInstructorRequest) Reset()                    { *m = EnrollInstructorRequest{} }
func (m *EnrollInstructorRequest) String() string            { return proto.CompactTextString(m) }
func (*EnrollInstructorRequest) ProtoMessage()               {}
func (*EnrollInstructorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *EnrollInstructorRequest) GetInstructor() *Person {
	if m != nil {
		return m.Instructor
	}
	return nil
}

type EnrollInstructorResponse struct {
	ErrData *ErrorData `protobuf:"bytes,1,opt,name=errData" json:"errData,omitempty"`
}

func (m *EnrollInstructorResponse) Reset()                    { *m = EnrollInstructorResponse{} }
func (m *EnrollInstructorResponse) String() string            { return proto.CompactTextString(m) }
func (*EnrollInstructorResponse) ProtoMessage()               {}
func (*EnrollInstructorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *EnrollInstructorResponse) GetErrData() *ErrorData {
	if m != nil {
		return m.ErrData
	}
	return nil
}

type EnrollUserRequest struct {
	User *Person `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *EnrollUserRequest) Reset()                    { *m = EnrollUserRequest{} }
func (m *EnrollUserRequest) String() string            { return proto.CompactTextString(m) }
func (*EnrollUserRequest) ProtoMessage()               {}
func (*EnrollUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *EnrollUserRequest) GetUser() *Person {
	if m != nil {
		return m.User
	}
	return nil
}

type EnrollUserResponse struct {
	ErrData *ErrorData `protobuf:"bytes,1,opt,name=errData" json:"errData,omitempty"`
}

func (m *EnrollUserResponse) Reset()                    { *m = EnrollUserResponse{} }
func (m *EnrollUserResponse) String() string            { return proto.CompactTextString(m) }
func (*EnrollUserResponse) ProtoMessage()               {}
func (*EnrollUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *EnrollUserResponse) GetErrData() *ErrorData {
	if m != nil {
		return m.ErrData
	}
	return nil
}

func init() {
	proto.RegisterType((*ErrorData)(nil), "serversvc.ErrorData")
	proto.RegisterType((*ServerSvcStatusRequest)(nil), "serversvc.ServerSvcStatusRequest")
	proto.RegisterType((*ServerSvcStatusResponse)(nil), "serversvc.ServerSvcStatusResponse")
	proto.RegisterType((*Session)(nil), "serversvc.Session")
	proto.RegisterType((*Person)(nil), "serversvc.Person")
	proto.RegisterType((*Instructor)(nil), "serversvc.Instructor")
	proto.RegisterType((*User)(nil), "serversvc.User")
	proto.RegisterType((*GetSessionsRequest)(nil), "serversvc.GetSessionsRequest")
	proto.RegisterType((*GetSessionsReply)(nil), "serversvc.GetSessionsReply")
	proto.RegisterType((*PostSessionRequest)(nil), "serversvc.PostSessionRequest")
	proto.RegisterType((*PostSessionReply)(nil), "serversvc.PostSessionReply")
	proto.RegisterType((*EnrollInstructorRequest)(nil), "serversvc.EnrollInstructorRequest")
	proto.RegisterType((*EnrollInstructorResponse)(nil), "serversvc.EnrollInstructorResponse")
	proto.RegisterType((*EnrollUserRequest)(nil), "serversvc.EnrollUserRequest")
	proto.RegisterType((*EnrollUserResponse)(nil), "serversvc.EnrollUserResponse")
}

func init() { proto.RegisterFile("serverrpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0x25, 0x1f, 0x24, 0xec, 0x04, 0x89, 0x74, 0x54, 0xb5, 0xab, 0xd0, 0xa2, 0x62, 0x84, 0x54,
	0xa4, 0x2a, 0x12, 0x41, 0xe2, 0xc0, 0x11, 0x12, 0xa1, 0x00, 0x87, 0x6a, 0x53, 0x6e, 0x70, 0x58,
	0x36, 0xa6, 0x8a, 0x94, 0xac, 0x17, 0xdb, 0x89, 0xe8, 0x2f, 0xe2, 0x97, 0xf1, 0x3f, 0x6a, 0x7b,
	0xed, 0x8d, 0x37, 0x9b, 0x44, 0x6a, 0x6e, 0x9e, 0x99, 0xe7, 0x37, 0x6f, 0xfc, 0x26, 0x1b, 0x78,
	0x26, 0x28, 0x5f, 0x51, 0xce, 0xb3, 0xa4, 0x9f, 0x71, 0x26, 0x19, 0x06, 0x79, 0x42, 0xac, 0x12,
	0x32, 0x82, 0x60, 0xc4, 0x39, 0xe3, 0xc3, 0x58, 0xc6, 0x78, 0x06, 0x01, 0xd5, 0xc1, 0x27, 0x36,
	0xa5, 0x61, 0xed, 0xa2, 0x76, 0x19, 0x44, 0xeb, 0x04, 0xf6, 0xe0, 0x89, 0x09, 0x26, 0x92, 0x87,
	0x75, 0x53, 0x2c, 0x62, 0x72, 0x05, 0x27, 0x13, 0xc3, 0x39, 0x59, 0x25, 0x13, 0x19, 0xcb, 0xa5,
	0x88, 0xe8, 0x9f, 0x25, 0x15, 0x12, 0x11, 0x9a, 0x69, 0xbc, 0x70, 0x74, 0xe6, 0x4c, 0x12, 0x38,
	0xad, 0xa0, 0x45, 0xc6, 0x52, 0x41, 0xb1, 0x0f, 0x6d, 0x45, 0xaa, 0xd5, 0x98, 0x1b, 0x9d, 0xc1,
	0x71, 0xbf, 0x10, 0xdb, 0x2f, 0x94, 0x46, 0x0e, 0x84, 0x21, 0xb4, 0x17, 0x54, 0x88, 0xf8, 0x96,
	0x5a, 0x4d, 0x2e, 0x24, 0xff, 0x6b, 0xd0, 0x9e, 0xa8, 0xf3, 0x8c, 0xa5, 0x7a, 0x30, 0x91, 0x1f,
	0xc7, 0x43, 0x37, 0x58, 0x91, 0xc0, 0x0b, 0xe8, 0xd8, 0xe0, 0x66, 0xb6, 0x70, 0x3c, 0x7e, 0xca,
	0x43, 0x0c, 0xa9, 0x48, 0xc2, 0x46, 0x09, 0xa1, 0x53, 0x48, 0xe0, 0xe9, 0x2c, 0x15, 0x92, 0x2f,
	0x13, 0xc9, 0xb8, 0x6a, 0xd2, 0x34, 0x90, 0x52, 0xce, 0xef, 0x73, 0x97, 0xd1, 0xf0, 0x71, 0xb9,
	0x8f, 0x4a, 0xe1, 0x00, 0x8e, 0x6d, 0xf8, 0x5d, 0x4d, 0x2d, 0x46, 0x29, 0x67, 0xf3, 0x39, 0x9d,
	0x86, 0x2d, 0x05, 0x6d, 0x46, 0x5b, 0x6b, 0xe4, 0x07, 0xb4, 0xae, 0x55, 0xac, 0xa6, 0xdc, 0xf2,
	0xd4, 0xd8, 0x85, 0xc6, 0xfa, 0x6d, 0xf4, 0x51, 0x67, 0x04, 0xfd, 0x6b, 0x67, 0xd0, 0x47, 0x6d,
	0xec, 0x9c, 0x25, 0xb1, 0x54, 0xd4, 0x56, 0x77, 0x11, 0x13, 0x01, 0x30, 0x2e, 0x66, 0xc0, 0x37,
	0xd0, 0xca, 0x4c, 0x2f, 0x6b, 0xce, 0x91, 0x67, 0x4e, 0x2e, 0x22, 0xb2, 0x80, 0xca, 0x83, 0xd4,
	0xb7, 0x3c, 0xc8, 0x09, 0xb4, 0xb8, 0x6a, 0x93, 0xde, 0x1a, 0x35, 0xf5, 0xc8, 0x46, 0x64, 0x06,
	0x4d, 0x3d, 0xe3, 0x43, 0xda, 0x29, 0xaa, 0xa5, 0x2a, 0x16, 0x8d, 0x6c, 0x84, 0x2f, 0x00, 0x7e,
	0xf3, 0x19, 0x4d, 0xa7, 0x62, 0x3c, 0x14, 0xaa, 0x4d, 0x43, 0xd5, 0xbc, 0x0c, 0x79, 0x0f, 0xf8,
	0x99, 0x4a, 0xbb, 0x27, 0xc5, 0xd2, 0x6e, 0x38, 0x55, 0xab, 0x38, 0x45, 0x32, 0xe8, 0x96, 0xee,
	0x65, 0xf3, 0xbb, 0x07, 0xef, 0xee, 0x15, 0xb4, 0x2d, 0xa5, 0x12, 0xdd, 0x50, 0x78, 0xf4, 0xf0,
	0x96, 0x3a, 0x72, 0x10, 0x72, 0x09, 0x78, 0xcd, 0x84, 0x6b, 0xb9, 0xef, 0xe7, 0xf5, 0x11, 0xba,
	0x25, 0xe4, 0x01, 0xda, 0xc8, 0x37, 0x38, 0xcd, 0x37, 0x6c, 0xed, 0xbe, 0x6b, 0xf9, 0x16, 0x60,
	0xed, 0xe2, 0x6e, 0x67, 0x3c, 0x10, 0xf9, 0x02, 0x61, 0x95, 0xed, 0xb0, 0x5f, 0x3c, 0xf9, 0x00,
	0x47, 0x39, 0x97, 0x5e, 0x11, 0xa7, 0xe9, 0x35, 0x34, 0xb5, 0xe1, 0xbb, 0xd5, 0x98, 0x32, 0x19,
	0x02, 0xfa, 0x77, 0x0f, 0x53, 0x30, 0xf8, 0xd7, 0x80, 0xa0, 0xf8, 0x7e, 0xe1, 0x0d, 0x04, 0x7a,
	0x13, 0xcc, 0x67, 0x0c, 0x5f, 0x96, 0x1c, 0xdc, 0xf6, 0x41, 0xec, 0x91, 0x7d, 0x90, 0x5c, 0x11,
	0x79, 0x84, 0x5f, 0xa1, 0xe3, 0xed, 0x17, 0x9e, 0x7b, 0x97, 0xaa, 0xfb, 0xda, 0x7b, 0xbe, 0xab,
	0xac, 0xac, 0xcf, 0xc9, 0xbc, 0x85, 0x28, 0x91, 0x55, 0x57, 0xaa, 0x44, 0xb6, 0xb9, 0x47, 0x8a,
	0xec, 0x27, 0x74, 0x37, 0xbd, 0x44, 0x7f, 0xa6, 0x1d, 0x6b, 0xd3, 0x7b, 0xb5, 0x17, 0xe3, 0x0d,
	0x0e, 0x6b, 0x8b, 0xf0, 0xac, 0x72, 0xc9, 0x73, 0xbd, 0x77, 0xbe, 0xa3, 0xea, 0xc8, 0x7e, 0xb5,
	0xcc, 0xff, 0xdd, 0xbb, 0xfb, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x4c, 0xaa, 0x7e, 0x02, 0x07,
	0x00, 0x00,
}
